#!/bin/bash

while [ "$UID" != "0" ]; do
    echo "You must be root!"
    exit 1
done

main_interface() {

if [ ! "$(cat /etc/environment | grep -o 'IFACE[^ ]*')" ]; then

  clear
  echo -e "Your global interface variable is not set."
  echo -e "It should only need to be set once.\n"
  read -p "Press <enter> to continue"
  clear

  echo -e "
#~~~~~~~~~~~~~~~~#
$(iw dev | grep -o 'Interface [^ ]*' | sed -e 's/Interface //g' | sort -n)
#~~~~~~~~~~~~~~~~#\n"
  read -p "Enter a wireless interface to use, [press enter to set later]: " i_face

   if [ "$i_face" ]; then

      echo -e "\nIFACE=$i_face" >> /etc/environment && wait
      echo -e "Your interface has been set. You won't have to set it again so long
as it remains in /etc/environment. To reload /etc/environment,
for system-wide use, log out and then log back in or reboot.\n"
      read -p "press <enter> to continue"
      clear

   fi
   
fi

# For live ISO compatibility IFACE set with iw output.
if [ ! "$IFACE" ]; then

   IFACE="$(iw dev | grep -m1 -o 'Interface w[^ ]*' | sed -e 's/Interface //g')"

fi

clear

echo -e "
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
 1.) Make 1 monitor interface
 2.) Make multiple interfaces
 3.) List created interfaces
 4.) Delete monitor interfaces
 5.) Help menu
 6.) Exit
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#     \n"
}

rand_mac() {

   gen() { local NUM="$(tr -dc '0-9a-f' </dev/urandom | head -c 2)"; echo -n "$NUM:"; }

   for c in {1..6}; do

       if [ "$c" -lt "6" ]; then
          gen
       else
          gen | tr -d ':'
       fi

   done
}

remove_mon() {

   count="$(iw dev | grep -o "mon[1-9]" | wc -l)"

   if [ "$count" == "0" ]; then clear && echo "No interfaces to remove!"; exit 1; fi

   for a in $(seq 1 $count)
   do

       iw mon${a} del

   done
}

# Variable assigned a random mac.
nmac="$(rand_mac)"

make_mon() {

   if [ "$(iw dev | grep -o "mon[1-9]" | wc -l)" -gt "0" ]; then remove_mon; fi
   if [ "$(iw $IFACE interface add mon1 type monitor addr ${1} 2>&1 | grep -Eo 'command failed')" ]; then

      unset nmac; nmac="$(rand_mac)"
      make_mon "$nmac" && wait

   else

      clear; echo -e "mon1 is up!"

   fi
}

multi_mon() {

   if [ "$(iw dev | grep -o "mon[1-9]" | wc -l)" -gt "0" ]; then remove_mon; fi
      VNICS="${1}"
   if [ ! "${1}" ]; then read -p "How many VNICs do you want?: " VNICS; fi
      clear; for ((n=1; n <= VNICS; n++))
   do

      maker() {

         if [ "$(iw $IFACE interface add mon${n} type monitor addr $(rand_mac) 2>&1 | grep -Eo 'command failed')" ]; then

            unset nmac; local nmac="$(rand_mac)"
            maker && wait

         else

            clear; echo -e "mon${n} is up..."
            return;

         fi; }; maker; done

   clear && echo -e "All ${1} interfaces are up!"

}

list_mon() {

   local count="$(iw dev | grep -o "mon[0-9]" | wc -l)"
   if [ "$count" == "0" ]; then echo -e "[ERROR]:Nothing to list!"; fi

   for ((b=1; b <= count; b++))
   do

       echo -e "$(iw dev | grep -m1 -Eo "mon(${b}){1}")"

   done | column

}

help_menu() {

   echo -e "
Makemon is a slim tool for creating a single or many virtual
monitor-mode wireless interfaces for various wireless tasks.
You can use command-line options or you can use the simple
command-line user interface to select what options you want
to use.

[USER INTERFACE USAGE]

   Run <makemon> as a command and follow the prompts.

[COMMAND-LINE USAGE]

   makemon [-olrh] OR makemon [-m] [2..99+]

[OPTIONS]

  -o   --one)     Create a single virtual monitor interface.
  -m   --multi)   Create multiple virtual monitor mode interfaces.
  -l   --list)    Show created virtual monitor mode interfaces.
  -r   --remove)  Delete all virtual monitor interfaces.
  -h   --help)    Show this menu.

Report bugs @ https://github.com/yo-kai-sei-shin-kage/makemon
"; exit 0
}

if [ ! "${1}" ]; then

   main_interface
   read -p "Enter an option: " CHOICE
   clear; case $CHOICE in

          1) make_mon "$(rand_mac)" ;;
          2) multi_mon ;;
          3) list_mon ;;
          4) remove_mon && clear; echo -e "All monitor interfaces removed!" ;;
          5) help_menu ;;
          6) exit 0 ;;
          *) echo -e "[ERROR]: ${CHOICE} is not an accepted option!"; help_menu ;;

          esac
else

   CHOICE="${1}"
   clear; case $CHOICE in

          -o|--one) make_mon "$(rand_mac)" ;;
        -m|--multi) multi_mon "${2}" ;;
         -l|--list) list_mon && exit 0 ;;
       -r|--remove) remove_mon && clear; echo -e "All monitor interfaces removed!" ;;
       -h|--help|?) help_menu && exit 0 ;;
                 *) echo -e "[ERROR]: ${1} is not an accepted option!"; help_menu ;;
   esac
fi
